---
import ArrowDown from '@/components/icons/ArrowDown'
const { visible, all } = Astro.props
---

<div class="faq-more">
  <div>
    <div class="cloud-box">
      <div class="cloud">
        <p>{visible}/{all}</p>
      </div>
    </div>

    <div class="progress">
      <div class="progress-arrow"></div>
    </div>
    <div class="load-more-box">
      <button class="load-more">Wczytaj wiÄ™cej <ArrowDown size="2rem" /></button>
    </div>
  </div>
</div>

<script>
  // ----- Init cloud position
  const cloudBox = document.querySelector('.cloud-box') as HTMLDivElement
  const progress = document.querySelector('.progress') as HTMLDivElement
  const allQuestions = document.querySelectorAll('#faq li')!
  const hiddenItems = document.querySelectorAll('#faq li.display-none')!
  const visibleItems = allQuestions.length - hiddenItems.length

  cloudBox.style.setProperty('--cloud', `${(visibleItems / allQuestions.length) * 100}%`)

  // ----- Init progress bar
  progress.style.setProperty('--progress', `${visibleItems / allQuestions.length}`)

  // ----- Load more FAQ items
  const itemsToLoad = 2
  const loadMoreButton = document.querySelector('.load-more')!
  loadMoreButton.addEventListener('click', () => {
    const hiddenItems = document.querySelectorAll('#faq li.display-none')!

    const itemsToShow = Array.from(hiddenItems).slice(0, itemsToLoad)
    itemsToShow.forEach((el) => {
      el.classList.remove('display-none')
      el.classList.add('slide-in')
    })

    const newHiddenItems = document.querySelectorAll('#faq li.display-none')!

    // ----- Hide load more button if no more items to show
    if (newHiddenItems.length === 0) {
      document.querySelector('.faq-more')!.classList.add('display-none')
    }

    // ----- Update cloud text
    const allQuestions = document.querySelectorAll('#faq li')!
    const cloud = document.querySelector('.cloud')!
    cloud.textContent = `${allQuestions.length - newHiddenItems.length}/${allQuestions.length}`

    // ----- Update progress bar
    const progress = document.querySelector('.progress') as HTMLDivElement
    progress.style.setProperty('--progress', `${(allQuestions.length - newHiddenItems.length) / allQuestions.length}`)

    // ----- Update cloud position
    const cloudBox = document.querySelector('.cloud-box') as HTMLDivElement
    cloudBox.style.setProperty(
      '--cloud',
      `${((allQuestions.length - newHiddenItems.length) / allQuestions.length) * 100}%`
    )
  })
</script>
<style>
  .faq-more {
    display: flex;
    justify-content: center;
    margin-top: 3.2rem;
  }

  .cloud-box {
    display: flex;
    position: relative;
    --cloud: 0;
  }

  .cloud {
    position: relative;
    left: var(--cloud);
    transform: translateX(-50%);
    text-align: center;
    background-color: var(--primary-600);
    padding: 0.2rem 1rem;
    border-radius: 100px;
    transition: 0.3s var(--cubic-bezier);
  }
  .cloud::after {
    height: 30%;
    aspect-ratio: 1;
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateY(50%);
    rotate: 45deg;
    background-color: var(--primary-600);
  }

  p {
    font-size: 2.1rem;
  }

  .progress {
    margin-top: 1.5rem;
    height: 0.3rem;
    background-color: var(--primary-600);
    border-radius: 100px;
    overflow: visible;
    position: relative;
    --progress: 0;
  }

  .progress::before {
    content: '';
    display: block;
    height: 100%;
    width: calc(var(--progress) * 100%);
    background: linear-gradient(280deg, var(--accent-1), var(--accent-2));
    border-radius: 100px;
    transition: 0.3s var(--cubic-bezier);
  }

  .load-more-box {
    margin-top: 2rem;
  }

  .load-more {
    display: flex;
    align-items: center;
    gap: 0.8rem;
  }
</style>
