---
import Layout from '@/src/layouts/Layout.astro'
import metadataFetch from '@/utils/metadata.fetch'
import sanityFetch from '../utils/sanity.fetch'
import CirclePlus from '@/src/components/icons/CirclePlus'
import CircleMinus from '@/src/components/icons/CircleMinus'

let metadata;
try {
  metadata = await metadataFetch('Index_Page');
} catch (e) {
  metadata = {};
}
if (!metadata) metadata = {};
// Fix type if openGraphImage is nested, and ensure it matches OpenGraphImageProps
if (
  metadata.openGraphImage &&
  typeof metadata.openGraphImage === 'object' &&
  'openGraphImage' in metadata.openGraphImage &&
  typeof metadata.openGraphImage.openGraphImage === 'object' &&
  metadata.openGraphImage.openGraphImage !== null &&
  'url' in metadata.openGraphImage.openGraphImage &&
  'height' in metadata.openGraphImage.openGraphImage
) {
  metadata.openGraphImage = metadata.openGraphImage.openGraphImage as { url: string; height: string };
}
if (
  metadata.openGraphImage &&
  typeof metadata.openGraphImage === 'object' &&
  !('url' in metadata.openGraphImage && 'height' in metadata.openGraphImage)
) {
  metadata.openGraphImage = undefined;
}
const faqData = await sanityFetch({ query: '*[_type == "Faq_Collection"]' })
const fixedFaq = faqData.map((faq) => ({
  question: faq.question?.[0]?.children?.[0]?.text,
  answer: faq.answer?.[0]?.children?.[0]?.text,
}))
---

<Layout
  path=""
  title={metadata.title ?? ''}
  description={metadata.description ?? ''}
  openGraphImage={metadata.openGraphImage}
>
  <section id="faq">
    <div>
      <div class="header">
        <h3><span>Pytaj</span>, jakby jutra miało nie być. Odpowiemy!</h3>
      </div>
      <ul>
        {
          fixedFaq.map((faq, index) => (
            <li>
              <button>
                <strong>{(index + 1).toString().padStart(2, '0')}</strong>
                <div>
                  <div class="question">
                    <p>{faq.question}</p>
                    <div>
                      <CirclePlus
                        title="Green circle with plus inside"
                        size="2.4rem"
                        aria-label="Show Answer"
                        className="icon plus"
                      />
                      <CircleMinus
                        title="Green circle with minus inside"
                        size="2.4rem"
                        aria-label="Hide Answer"
                        className="icon minus hidden"
                      />
                    </div>
                  </div>
                  <div class="answer">
                    <p>{faq.answer}</p>
                  </div>
                </div>
              </button>
            </li>
          ))
        }
      </ul>
    </div>
  </section>
</Layout>
<script>
  const faqItems = document.querySelectorAll('#faq li button')!
  faqItems.forEach((el) => {
    el.addEventListener('click', () => {
      el.parentElement?.toggleAttribute('data-expanded')
      // el.querySelector('.minus')?.classList.toggle('hidden')
      el.querySelector('.plus')?.classList.toggle('hidden')
    })
  })
</script>
<style>
  section {
    padding-top: 16rem;
  }
  .header {
    display: flex;
    gap: 2rem;
  }
  img {
    width: 50rem;
  }
  ul {
    margin-top: 1.2rem;
  }
  button {
    display: flex;
    gap: 3.2rem;
    padding: 2rem 1.6rem;
    border-bottom: 1px solid #75758a;
    text-align: left;
  }
  button strong {
    color: #c6cdcc;
    width: 4.8rem;
  }
  .question {
    display: flex;
    gap: 3.2rem;
    justify-content: space-between;
    align-items: center;
  }
  .icon {
    flex-shrink: 0;
    /* position: absolute; */
    /* width: 4rem; */
    /* height: 4rem; */
  }

  /* Hide plus icon when expanded, show minus icon */
  li:not([data-expanded]) .answer {
    height: 0;
    overflow: hidden;
    padding-bottom: 0;
  }

  li[data-expanded] .answer {
    padding-top: 2rem;
    padding-bottom: 2.4rem;
  }

  .hidden {
    display: none;
  }
</style>
